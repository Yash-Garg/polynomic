{"head":{"title":"Pathstring","layout":"Documentation","description":"parse(d) Parses a pathstring and build an array of points with absolute coords. Arguments d string The pathstring to parse. Returns Array…"},"body":"<h2 id=\"parsed\"><a href=\"#parsed\" class=\"phenomic-HeadingAnchor\">#</a><code>parse(d)</code></h2>\n<p>Parses a pathstring and build an array of points with absolute coords.</p>\n<h3 id=\"arguments\"><a href=\"#arguments\" class=\"phenomic-HeadingAnchor\">#</a>Arguments</h3>\n<ol>\n<li><code>d</code> <em>string</em> The pathstring to parse.</li>\n</ol>\n<h3 id=\"returns\"><a href=\"#returns\" class=\"phenomic-HeadingAnchor\">#</a>Returns</h3>\n<p><em>Array</em> The corresponding array of points.</p>\n<h3 id=\"example\"><a href=\"#example\" class=\"phenomic-HeadingAnchor\">#</a>Example</h3>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// polynomic/lib/pathstring/parse</span>\n\nPolynomic.pathstring.parse(<span class=\"hljs-string\">\"M0 0L100 100z\"</span>)\n\n<span class=\"hljs-comment\">// ➜ [</span>\n<span class=\"hljs-comment\">//   {</span>\n<span class=\"hljs-comment\">//     code: \"M\",</span>\n<span class=\"hljs-comment\">//     x: 0,</span>\n<span class=\"hljs-comment\">//     y: 0,</span>\n<span class=\"hljs-comment\">//     parameters: {},</span>\n<span class=\"hljs-comment\">//   },</span>\n<span class=\"hljs-comment\">//   {</span>\n<span class=\"hljs-comment\">//     code: \"L\",</span>\n<span class=\"hljs-comment\">//     x: 100,</span>\n<span class=\"hljs-comment\">//     y: 100,</span>\n<span class=\"hljs-comment\">//     parameters: {},</span>\n<span class=\"hljs-comment\">//   },</span>\n<span class=\"hljs-comment\">//   {</span>\n<span class=\"hljs-comment\">//     code: \"z\",</span>\n<span class=\"hljs-comment\">//     x: 0,</span>\n<span class=\"hljs-comment\">//     y: 0,</span>\n<span class=\"hljs-comment\">//     parameters: {},</span>\n<span class=\"hljs-comment\">//   },</span>\n<span class=\"hljs-comment\">// ]</span></code></pre>\n<hr>\n<h2 id=\"buildpath\"><a href=\"#buildpath\" class=\"phenomic-HeadingAnchor\">#</a><code>build(path)</code></h2>\n<p>Builds an array of points into a pathstring.</p>\n<h3 id=\"arguments-1\"><a href=\"#arguments-1\" class=\"phenomic-HeadingAnchor\">#</a>Arguments</h3>\n<ol>\n<li><code>path</code> <em>Array</em> The path to build.</li>\n</ol>\n<h3 id=\"returns-1\"><a href=\"#returns-1\" class=\"phenomic-HeadingAnchor\">#</a>Returns</h3>\n<p><em>string</em> The built pathstring.</p>\n<h3 id=\"example-1\"><a href=\"#example-1\" class=\"phenomic-HeadingAnchor\">#</a>Example</h3>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// polynomic/lib/pathstring/build</span>\n\npath = [\n  Polynomic.point.M(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>),\n  Polynomic.point.L(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>),\n  Polynomic.point.z(),\n]\n\nPolynomic.pathstring.build(path)\n\n<span class=\"hljs-comment\">// ➜ \"M0 0L100 100z\"</span></code></pre>\n<hr>\n<h2 id=\"isvalidd\"><a href=\"#isvalidd\" class=\"phenomic-HeadingAnchor\">#</a><code>isValid(d)</code></h2>\n<p>Checks if the given pathstring is a valid SVG path.</p>\n<ol>\n<li>Checks if the first point is a <code>M</code> ;</li>\n<li>Checks if all points have a correct number of parameters ;</li>\n<li>Checks if there are no invalid characters (the characters which match the regex <code>/^[mlhvqtcsaz\\d\\s,.-]*$/gi</code> are considered invalid).</li>\n</ol>\n<h3 id=\"arguments-2\"><a href=\"#arguments-2\" class=\"phenomic-HeadingAnchor\">#</a>Arguments</h3>\n<ol>\n<li><code>d</code> <em>string</em> The pathstring to check.</li>\n</ol>\n<h3 id=\"returns-2\"><a href=\"#returns-2\" class=\"phenomic-HeadingAnchor\">#</a>Returns</h3>\n<p><em>boolean</em> Returns <code>true</code> if the given pathstring is valid, else <code>false</code>.</p>\n<h3 id=\"example-2\"><a href=\"#example-2\" class=\"phenomic-HeadingAnchor\">#</a>Example</h3>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// polynomic/lib/pathstring/is-valid</span>\n\nPolynomic.pathstring.isValid(<span class=\"hljs-string\">\"M0,0l0 0a50 50, 0,1,0 -10 10\"</span>)\n\n<span class=\"hljs-comment\">// ➜ true</span>\n\nPolynomic.pathstring.isValid(<span class=\"hljs-string\">\"l10,10\"</span>)\n\n<span class=\"hljs-comment\">// ➜ false</span>\n\nPolynomic.pathstring.isValid(<span class=\"hljs-string\">\"q10 20,30\"</span>)\n\n<span class=\"hljs-comment\">// ➜ false</span>\n\nPolynomic.pathstring.isValid(<span class=\"hljs-string\">\"(╯°□°)╯︵ ┻━┻\"</span>)\n\n<span class=\"hljs-comment\">// ➜ false</span></code></pre>\n","__filename":"docs\\pathstring.md","__url":"/docs/pathstring/","__resourceUrl":"/docs/pathstring/index.html","__dataUrl":"/docs/pathstring/index.html.622b219fb0e7a6c6e4c8ae594854d439.json"}