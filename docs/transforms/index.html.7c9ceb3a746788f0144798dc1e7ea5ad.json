{"head":{"title":"Transforms","layout":"Documentation","description":"translate(path, dx, dy) Applies a 2D translation on a given path. You can pass absolute or relative values. Arguments path Array The path…"},"body":"<h2 id=\"translatepath-dx-dy\"><a href=\"#translatepath-dx-dy\" class=\"phenomic-HeadingAnchor\">#</a><code>translate(path, dx, dy)</code></h2>\n<p>Applies a 2D translation on a given path. You can pass absolute or relative values.</p>\n<h3 id=\"arguments\"><a href=\"#arguments\" class=\"phenomic-HeadingAnchor\">#</a>Arguments</h3>\n<ol>\n<li><code>path</code> <em>Array</em> The path to transform.</li>\n<li><code>dx</code> <em>number | string</em> The offset on the x-axis.</li>\n<li><code>dy</code> <em>number | string</em> The offset on the y-axis.</li>\n</ol>\n<h3 id=\"returns\"><a href=\"#returns\" class=\"phenomic-HeadingAnchor\">#</a>Returns</h3>\n<p><em>Array</em> The transformed path.</p>\n<h3 id=\"example\"><a href=\"#example\" class=\"phenomic-HeadingAnchor\">#</a>Example</h3>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// polynomic/lib/transforms/translate</span>\n\npath = Polynomic.pathstring.parse(<span class=\"hljs-string\">\"M0 0L100 0Q150 150 200 200\"</span>)\npath = Polynomic.transforms.translate(path, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">0</span>)\n\nPolynomic.pathstring.build(path)\n\n<span class=\"hljs-comment\">// ➜ \"M100 0L200 0Q250 150 300 200\"</span></code></pre>\n<hr>\n<h2 id=\"skewpath-thetax-thetay-x--0-y--0\"><a href=\"#skewpath-thetax-thetay-x--0-y--0\" class=\"phenomic-HeadingAnchor\">#</a><code>skew(path, thetaX, [thetaY, x = 0, y = 0])</code></h2>\n<p>Applies a 2D skew transformation on a given path. You can pass values in radians or degrees.</p>\n<h3 id=\"arguments-1\"><a href=\"#arguments-1\" class=\"phenomic-HeadingAnchor\">#</a>Arguments</h3>\n<ol>\n<li><code>path</code> <em>Array</em> The path to transform.</li>\n<li><code>thetaX</code> <em>number | string</em> The skewing angle to apply on the x-axis.</li>\n<li><code>[thetaY]</code> <em>number | string</em> The skewing angle to apply on the y-axis.</li>\n<li><code>[x = 0]</code> <em>number | string</em> The x coordinate of the transformation origin.</li>\n<li><code>[y = 0]</code> <em>number | string</em> The y coordinate of the transformation origin.</li>\n</ol>\n<h3 id=\"returns-1\"><a href=\"#returns-1\" class=\"phenomic-HeadingAnchor\">#</a>Returns</h3>\n<p><em>Array</em> The transformed path.</p>\n<h3 id=\"example-1\"><a href=\"#example-1\" class=\"phenomic-HeadingAnchor\">#</a>Example</h3>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// polynomic/lib/transforms/skew</span>\n\npath = Polynomic.pathstring.parse(<span class=\"hljs-string\">\"M0 0L100 0L100 100\"</span>)\npath = Polynomic.transforms.skew(path, <span class=\"hljs-built_in\">Math</span>.PI / <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">0</span>)\n\nPolynomic.pathstring.build(path)\n\n<span class=\"hljs-comment\">// ➜ \"M0 0L100 0L157.735 100\"</span></code></pre>\n<hr>\n<h2 id=\"scalepath-sx-sy-x--0-y--0\"><a href=\"#scalepath-sx-sy-x--0-y--0\" class=\"phenomic-HeadingAnchor\">#</a><code>scale(path, sx, [sy, x = 0, y = 0])</code></h2>\n<p>Applies a 2D scale transformation on a given path.</p>\n<h3 id=\"arguments-2\"><a href=\"#arguments-2\" class=\"phenomic-HeadingAnchor\">#</a>Arguments</h3>\n<ol>\n<li><code>path</code> <em>Array</em> The path to transform.</li>\n<li><code>sx</code> <em>number</em> The scale value to apply on the x-axis.</li>\n<li><code>[sy]</code> <em>number</em> The scale value to apply on the y-axis.</li>\n<li><code>[x = 0]</code> <em>number | string</em> The x coordinate of the transformation origin.</li>\n<li><code>[y = 0]</code> <em>number | string</em> The y coordinate of the transformation origin.</li>\n</ol>\n<h3 id=\"returns-2\"><a href=\"#returns-2\" class=\"phenomic-HeadingAnchor\">#</a>Returns</h3>\n<p><em>Array</em> The transformed path.</p>\n<h3 id=\"example-2\"><a href=\"#example-2\" class=\"phenomic-HeadingAnchor\">#</a>Example</h3>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// polynomic/lib/transforms/scale</span>\n\npath = Polynomic.pathstring.parse(<span class=\"hljs-string\">\"M0 0L100 0Q150 150 200 200\"</span>)\npath = Polynomic.transforms.scale(path, <span class=\"hljs-number\">0.5</span>, <span class=\"hljs-number\">1</span>)\n\nPolynomic.pathstring.build(path)\n\n<span class=\"hljs-comment\">// ➜ \"M0 0L50 0Q75 150 100 200\"</span></code></pre>\n<hr>\n<h2 id=\"rotatepath-theta-x--0-y--0\"><a href=\"#rotatepath-theta-x--0-y--0\" class=\"phenomic-HeadingAnchor\">#</a><code>rotate(path, theta, [x = 0, y = 0])</code></h2>\n<p>Applies a 2D rotation on a given path. You can pass value in radians or degrees.</p>\n<h3 id=\"arguments-3\"><a href=\"#arguments-3\" class=\"phenomic-HeadingAnchor\">#</a>Arguments</h3>\n<ol>\n<li><code>path</code> <em>Array</em> The path to transform.</li>\n<li><code>theta</code> <em>number | string</em> The rotation angle to apply.</li>\n<li><code>[x = 0]</code> <em>number | string</em> The x coordinate of the transformation origin.</li>\n<li><code>[y = 0]</code> <em>number | string</em> The y coordinate of the transformation origin.</li>\n</ol>\n<h3 id=\"returns-3\"><a href=\"#returns-3\" class=\"phenomic-HeadingAnchor\">#</a>Returns</h3>\n<p><em>Array</em> The transformed path.</p>\n<h3 id=\"example-3\"><a href=\"#example-3\" class=\"phenomic-HeadingAnchor\">#</a>Example</h3>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// polynomic/lib/transforms/rotate</span>\n\npath = Polynomic.pathstring.parse(<span class=\"hljs-string\">\"M0 0L100 0\"</span>)\npath = Polynomic.transforms.rotate(path, <span class=\"hljs-string\">\"90deg\"</span>)\n\nPolynomic.pathstring.build(path)\n\n<span class=\"hljs-comment\">// ➜ \"M0 0L0 100\"</span></code></pre>\n<hr>\n<h2 id=\"matrixpath-transform\"><a href=\"#matrixpath-transform\" class=\"phenomic-HeadingAnchor\">#</a><code>matrix(path, transform)</code></h2>\n<p>Transforms a path using a 3x3 transformation matrix.</p>\n<h3 id=\"arguments-4\"><a href=\"#arguments-4\" class=\"phenomic-HeadingAnchor\">#</a>Arguments</h3>\n<ol>\n<li><code>path</code> <em>Array</em> The path to transform.</li>\n<li><code>transform</code> <em>Array</em> The 3x3 transformation matrix.</li>\n</ol>\n<h3 id=\"returns-4\"><a href=\"#returns-4\" class=\"phenomic-HeadingAnchor\">#</a>Returns</h3>\n<p><em>Array</em> The transformed path.</p>\n<h3 id=\"example-4\"><a href=\"#example-4\" class=\"phenomic-HeadingAnchor\">#</a>Example</h3>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// polynomic/lib/transforms/matrix</span>\n\npath = Polynomic.pathstring.parse(<span class=\"hljs-string\">\"M0 0L100 0L100 100\"</span>)\npath = Polynomic.transforms.matrix(path, [\n  <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>,\n])\n\nPolynomic.pathstring.build(path)\n\n<span class=\"hljs-comment\">// ➜ \"M0 0L100 0L100 100\"</span></code></pre>\n<hr>\n<h2 id=\"matrixoriginpath-transform-x--0-y--0\"><a href=\"#matrixoriginpath-transform-x--0-y--0\" class=\"phenomic-HeadingAnchor\">#</a><code>matrixOrigin(path, transform, [x = 0, y = 0])</code></h2>\n<p>Same as the <code>matrix</code> function, but will be based on a custom origin. You can pass absolute or relative coordinates.</p>\n<h3 id=\"arguments-5\"><a href=\"#arguments-5\" class=\"phenomic-HeadingAnchor\">#</a>Arguments</h3>\n<ol>\n<li><code>path</code> <em>Array</em> The path to transform.</li>\n<li><code>transform</code> <em>Array</em> The 3x3 transformation matrix.</li>\n<li><code>[x = 0]</code> <em>number | string</em> The x coordinate of the transformation origin.</li>\n<li><code>[y = 0]</code> <em>number | string</em> The y coordinate of the transformation origin.</li>\n</ol>\n<h3 id=\"returns-5\"><a href=\"#returns-5\" class=\"phenomic-HeadingAnchor\">#</a>Returns</h3>\n<p><em>Array</em> The transformed path.</p>\n<h3 id=\"example-5\"><a href=\"#example-5\" class=\"phenomic-HeadingAnchor\">#</a>Example</h3>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// polynomic/lib/transforms/matrix-origin</span>\n\npath = Polynomic.pathstring.parse(<span class=\"hljs-string\">\"M0 0L100 0L100 100\"</span>)\npath = Polynomic.transforms.matrixOrigin(path, [\n  <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>,\n], <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">50</span>)\n\nPolynomic.pathstring.build(path)\n\n<span class=\"hljs-comment\">// ➜ \"M0 0L100 0L100 100\"</span></code></pre>\n","__filename":"docs\\transforms.md","__url":"/docs/transforms/","__resourceUrl":"/docs/transforms/index.html","__dataUrl":"/docs/transforms/index.html.7c9ceb3a746788f0144798dc1e7ea5ad.json"}